local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "FlameHubUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local key = "95a20f6011570a4f9aab46df776dfe80"
local link = "https://www.roblox.com/share?code=" .. key .. "&type=Server"
local placeId = game.PlaceId

local fullSize = UDim2.new(0, 400, 0, 200)
local minimizedSize = UDim2.new(0, 400, 0, 40)

local main = Instance.new("Frame", gui)
main.Size = fullSize
main.Position = UDim2.new(0.5, -200, 0.5, -100)
main.AnchorPoint = Vector2.new(0.5, 0.5)
main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
main.BorderSizePixel = 0
main.Active = true
Instance.new("UICorner", main).CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", main)
title.Size = UDim2.new(1, -50, 0, 30)
title.Position = UDim2.new(0, 10, 0, 6)
title.BackgroundTransparency = 1
title.Text = "Flame Hub"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextXAlignment = Enum.TextXAlignment.Left

local minimizeBtn = Instance.new("TextButton", main)
minimizeBtn.Size = UDim2.new(0, 28, 0, 28)
minimizeBtn.Position = UDim2.new(1, -36, 0, 6)
minimizeBtn.BackgroundTransparency = 1
minimizeBtn.Text = "-"
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 20
minimizeBtn.TextColor3 = Color3.fromRGB(200, 200, 200)

local inner = Instance.new("Frame", main)
inner.Size = UDim2.new(1, -20, 1, -46)
inner.Position = UDim2.new(0, 10, 0, 40)
inner.BackgroundTransparency = 1

local box = Instance.new("TextBox", inner)
box.Size = UDim2.new(1, 0, 0, 36)
box.Position = UDim2.new(0, 0, 0, 0)
box.PlaceholderText = "Enter Key"
box.Font = Enum.Font.Gotham
box.Text = ""
box.TextColor3 = Color3.fromRGB(255, 255, 255)
box.TextSize = 16
box.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
box.BorderSizePixel = 0
box.ClearTextOnFocus = true
Instance.new("UICorner", box).CornerRadius = UDim.new(0, 8)

local injectBtn = Instance.new("TextButton", inner)
injectBtn.Size = UDim2.new(0.48, 0, 0, 36)
injectBtn.Position = UDim2.new(0, 0, 0, 46)
injectBtn.Text = "Inject Key"
injectBtn.Font = Enum.Font.GothamBold
injectBtn.TextSize = 14
injectBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
injectBtn.BackgroundColor3 = Color3.fromRGB(80, 75, 120)
injectBtn.BorderSizePixel = 0
Instance.new("UICorner", injectBtn).CornerRadius = UDim.new(0, 8)

local getKeyBtn = Instance.new("TextButton", inner)
getKeyBtn.Size = UDim2.new(0.48, 0, 0, 36)
getKeyBtn.Position = UDim2.new(0.52, 0, 0, 46)
getKeyBtn.Text = "Get Key"
getKeyBtn.Font = Enum.Font.GothamBold
getKeyBtn.TextSize = 14
getKeyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
getKeyBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
getKeyBtn.BorderSizePixel = 0
Instance.new("UICorner", getKeyBtn).CornerRadius = UDim.new(0, 8)

local minimized = false
minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		main.Size = minimizedSize
		inner.Visible = false
		minimizeBtn.Text = "+"
	else
		main.Size = fullSize
		inner.Visible = true
		minimizeBtn.Text = "-"
	end
end)

injectBtn.MouseButton1Click:Connect(function()
	local ok = pcall(function()
		TeleportService:TeleportToPrivateServer(placeId, key, {player})
	end)
	if not ok then
		box.Text = "Invalid Key"
	end
end)

getKeyBtn.MouseButton1Click:Connect(function()
	pcall(function()
		if setclipboard then
			setclipboard(link)
		end
	end)
	box.Text = "Link copied"
end)

-- Dragging logic
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
	local delta = input.Position - dragStart
	main.Position = UDim2.new(
		startPos.X.Scale,
		startPos.X.Offset + delta.X,
		startPos.Y.Scale,
		startPos.Y.Offset + delta.Y
	)
end

main.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = main.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

main.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and input == dragInput then
		update(input)
	end
end)
